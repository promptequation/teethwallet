# Generated by Django 3.2.5 on 2022-10-31 20:17

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_created', models.PositiveBigIntegerField(default=0, editable=False)),
                ('last_updated', models.PositiveBigIntegerField(default=0, editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('type', models.CharField(default='', max_length=200)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Last name')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Name')),
                ('username', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='Username')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, unique=True, verbose_name='Email')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Phone')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('avatar', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='media/user-avatars')),
                ('street', models.CharField(blank=True, max_length=150, null=True, verbose_name='Street')),
                ('street2', models.CharField(blank=True, max_length=150, null=True, verbose_name='Street 2')),
                ('state', models.CharField(blank=True, max_length=150, null=True, verbose_name='State')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name='City')),
                ('zip', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zip')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('nationality', models.SmallIntegerField(blank=True, choices=[(0, 'Afghan'), (1, 'Albanian'), (2, 'Algerian'), (3, 'American'), (4, 'Andorran'), (5, 'Angolan'), (6, 'Antiguans'), (7, 'Argentinean'), (8, 'Armenian'), (9, 'Australian'), (10, 'Austrian'), (11, 'Azerbaijani'), (12, 'Bahamian'), (13, 'Bahraini'), (14, 'Bangladeshi'), (15, 'Barbadian'), (16, 'Barbudans'), (17, 'Batswana'), (18, 'Belarusian'), (19, 'Belgian'), (20, 'Belizean'), (21, 'Beninese'), (22, 'Bhutanese'), (23, 'Bolivian'), (24, 'Bosnian'), (25, 'Brazilian'), (26, 'British'), (27, 'Bruneian'), (28, 'Bulgarian'), (29, 'Burkinabe'), (30, 'Burmese'), (31, 'Burundian'), (32, 'Cambodian'), (33, 'Cameroonian'), (34, 'Canadian'), (35, 'Cape Verdean'), (36, 'Central African'), (37, 'Chadian'), (38, 'Chilean'), (39, 'Chinese'), (40, 'Colombian'), (41, 'Comoran'), (42, 'Congolese'), (43, 'Costa Rican'), (44, 'Croatian'), (45, 'Cuban'), (46, 'Cypriot'), (47, 'Czech'), (48, 'Danish'), (49, 'Djibouti'), (50, 'Dominican'), (51, 'Dutch'), (52, 'Dutchman'), (53, 'Dutchwoman'), (54, 'East Timorese'), (55, 'Ecuadorean'), (56, 'Egyptian'), (57, 'Emirian'), (58, 'Equatorial Guinean'), (59, 'Eritrean'), (60, 'Estonian'), (61, 'Ethiopian'), (62, 'Fijian'), (63, 'Filipino'), (64, 'Finnish'), (65, 'French'), (66, 'Gabonese'), (67, 'Gambian'), (68, 'Georgian'), (69, 'German'), (70, 'Ghanaian'), (71, 'Greek'), (72, 'Grenadian'), (73, 'Guatemalan'), (74, 'Guinea Bissauan'), (75, 'Guinean'), (76, 'Guyanese'), (77, 'Haitian'), (78, 'Herzegovinian'), (79, 'Honduran'), (80, 'Hungarian'), (81, 'I Kiribati'), (82, 'Icelander'), (83, 'Indian'), (84, 'Indonesian'), (85, 'Iranian'), (86, 'Iraqi'), (87, 'Irish'), (88, 'Israeli'), (89, 'Italian'), (90, 'Ivorian'), (91, 'Jamaican'), (92, 'Japanese'), (93, 'Jordanian'), (94, 'Kazakhstani'), (95, 'Kenyan'), (96, 'Kittian And Nevisian'), (97, 'Kuwaiti'), (98, 'Kyrgyz'), (99, 'Laotian'), (100, 'Latvian'), (101, 'Lebanese'), (102, 'Liberian'), (103, 'Libyan'), (104, 'Liechtensteiner'), (105, 'Lithuanian'), (106, 'Luxembourger'), (107, 'Macedonian'), (108, 'Malagasy'), (109, 'Malawian'), (110, 'Malaysian'), (111, 'Maldivan'), (112, 'Malian'), (113, 'Maltese'), (114, 'Marshallese'), (115, 'Mauritanian'), (116, 'Mauritian'), (117, 'Mexican'), (118, 'Micronesian'), (119, 'Moldovan'), (120, 'Monacan'), (121, 'Mongolian'), (122, 'Moroccan'), (123, 'Mosotho'), (124, 'Motswana'), (125, 'Mozambican'), (126, 'Namibian'), (127, 'Nauruan'), (128, 'Nepalese'), (129, 'Netherlander'), (130, 'New Zealander'), (131, 'Ni Vanuatu'), (132, 'Nicaraguan'), (133, 'Nigerian'), (134, 'Nigerien'), (135, 'North Korean'), (136, 'Northern Irish'), (137, 'Norwegian'), (138, 'Omani'), (139, 'Pakistani'), (140, 'Palauan'), (141, 'Panamanian'), (142, 'Papua New Guinean'), (143, 'Paraguayan'), (144, 'Peruvian'), (145, 'Polish'), (146, 'Portuguese'), (147, 'Qatari'), (148, 'Romanian'), (149, 'Russian'), (150, 'Rwandan'), (151, 'Saint Lucian'), (152, 'Salvadoran'), (153, 'Samoan'), (154, 'San Marinese'), (155, 'Sao Tomean'), (156, 'Saudi'), (157, 'Scottish'), (158, 'Senegalese'), (159, 'Serbian'), (160, 'Seychellois'), (161, 'Sierra Leonean'), (162, 'Singaporean'), (163, 'Slovakian'), (164, 'Slovenian'), (165, 'Solomon Islander'), (166, 'Somali'), (167, 'South African'), (168, 'South Korean'), (169, 'Spanish'), (170, 'Sri Lankan'), (171, 'Sudanese'), (172, 'Surinamer'), (173, 'Swazi'), (174, 'Swedish'), (175, 'Swiss'), (176, 'Syrian'), (177, 'Taiwanese'), (178, 'Tajik'), (179, 'Tanzanian'), (180, 'Thai'), (181, 'Togolese'), (182, 'Tongan'), (183, 'Trinidadian Or Tobagonian'), (184, 'Tunisian'), (185, 'Turkish'), (186, 'Tuvaluan'), (187, 'Ugandan'), (188, 'Ukrainian'), (189, 'Uruguayan'), (190, 'Uzbekistani'), (191, 'Venezuelan'), (192, 'Vietnamese'), (193, 'Welsh'), (194, 'Yemenite'), (195, 'Zambian'), (196, 'Zimbabwean')], null=True)),
                ('language_code', models.CharField(blank=True, choices=[('EN', 'English'), ('PT', 'Portuguese')], default='EN', max_length=35, null=True)),
                ('is_caregiver', models.BooleanField(blank=True, default=False, null=True)),
                ('access_survey', models.BooleanField(blank=True, default=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MultiLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=2)),
                ('is_default', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserLang',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Last name')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Name')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Phone')),
                ('street', models.CharField(blank=True, max_length=150, null=True, verbose_name='Street')),
                ('street2', models.CharField(blank=True, max_length=150, null=True, verbose_name='Street 2')),
                ('state', models.CharField(blank=True, max_length=150, null=True, verbose_name='State')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name='City')),
                ('zip', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zip')),
                ('lang', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.multilanguage')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='lang',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.multilanguage'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='last_updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
